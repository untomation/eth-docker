x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  traefik:
    image: traefik:${TRAEFIK_TAG}
    restart: "unless-stopped"
    command:
      # - --accesslog=true
      # - --accesslog.format=json
      # - --accesslog.fields.defaultmode=keep
      # - --accesslog.fields.headers.defaultmode=keep
      # - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --log.level=${LOG_LEVEL:-info}
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=route53
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.address=:${TRAEFIK_WEB_HTTP_PORT}
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:${TRAEFIK_WEB_PORT}
      - --metrics
      - --metrics.prometheus
      - --global.sendAnonymousUsage
    ports:
      - ${HOST_IP:-}:${TRAEFIK_WEB_PORT}:${TRAEFIK_WEB_PORT}/tcp
      - ${HOST_IP:-}:${TRAEFIK_WEB_HTTP_PORT}:${TRAEFIK_WEB_HTTP_PORT}/tcp
    environment:
      - AWS_PROFILE=${AWS_PROFILE:-}
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/letsencrypt
      - ~/.aws:/root/.aws:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=8080
      - metrics.instance=traefik
      - metrics.network=${NETWORK}
    <<: *logging

  ddns:
    image: ddns-aws:local
    pull_policy: never
    build:
      context: ./traefik-utils
    restart: "unless-stopped"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_PROFILE=${AWS_PROFILE:-}
      - AWS_REGION=${AWS_REGION:-us-east-2}
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
      - A_RECORD_NAME=${DDNS_SUBDOMAIN}.${DOMAIN}
      - CNAME_LIST=${CNAME_LIST:-}
      - TTL=${TTL:-300}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ~/.aws:/root/.aws:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import boto3; boto3.client('route53').list_hosted_zones()"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    <<: *logging

volumes:
  certs:

networks:
  default:
    enable_ipv6: ${IPV6:-false}
